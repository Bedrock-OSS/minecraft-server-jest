const fs = require('fs');
const ts = require('typescript');
const path = require('path');
const dtsPath = require.resolve('@minecraft/server/index.d.ts');
const source = fs.readFileSync(dtsPath, 'utf8');
const sf = ts.createSourceFile(dtsPath, source, ts.ScriptTarget.Latest, true);

const enums = [];
function visit(node) {
    if (
        ts.isEnumDeclaration(node) &&
        node.modifiers &&
        node.modifiers.some((m) => m.kind === ts.SyntaxKind.ExportKeyword)
    ) {
        const e = { name: node.name.text, members: [] };
        node.members.forEach((m) => {
            const name = m.name.getText(sf);
            let value = name;
            if (m.initializer) {
                value = m.initializer.getText(sf);
                value = value.replace(/^['"]|['"]$/g, '');
            }
            e.members.push({ name, value });
        });
        enums.push(e);
    }
    ts.forEachChild(node, visit);
}
visit(sf);

let out = `// This file is generated by scripts/extract-enums.js\n`;
out += `// Do not edit manually.\n\n`;
enums.forEach((e) => {
    out += `export const ${e.name} = {\n`;
    e.members.forEach((m) => {
        const val = /^[0-9.-]+$/.test(m.value) ? m.value : `'${m.value}'`;
        out += `    ${m.name}: ${val},\n`;
    });
    out += `} as const;\n\n`;
});

fs.writeFileSync(path.join(__dirname, '../src/enums.ts'), out);
console.log(`Generated ${enums.length} enums.`);
